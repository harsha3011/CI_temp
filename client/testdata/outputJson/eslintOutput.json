[{"filePath":"/test/VisualBI-2/app.js","messages":[{"ruleId":"spaced-comment","severity":2,"message":"Expected space or tab after '//' in comment.","line":26,"column":1,"nodeType":"Line","source":"//Third party modules","fix":{"range":[849,849],"text":" "}},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":27,"column":1,"nodeType":"VariableDeclaration","source":"var favicon = require('serve-favicon');","fix":{"range":[869,872],"text":"let"}},{"ruleId":"one-var","severity":2,"message":"Split 'var' declarations into multiple statements.","line":30,"column":1,"nodeType":"VariableDeclaration","source":"var express = require('express'),"},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":30,"column":1,"nodeType":"VariableDeclaration","source":"var express = require('express'),","fix":{"range":[911,914],"text":"let"}},{"ruleId":"no-unused-vars","severity":2,"message":"'mongoose' is assigned a value but never used.","line":31,"column":5,"nodeType":"Identifier","source":"    mongoose = require('mongoose'),"},{"ruleId":"no-mixed-spaces-and-tabs","severity":2,"message":"Mixed spaces and tabs.","line":37,"column":2,"nodeType":"Program","source":"\t passport = require('passport'),"},{"ruleId":"no-mixed-spaces-and-tabs","severity":2,"message":"Mixed spaces and tabs.","line":38,"column":2,"nodeType":"Program","source":"\t compress = require('compression');"},{"ruleId":"no-mixed-spaces-and-tabs","severity":2,"message":"Mixed spaces and tabs.","line":39,"column":2,"nodeType":"Program","source":"\t LocalStrategy = require('passport-local').Strategy;"},{"ruleId":"spaced-comment","severity":2,"message":"Expected space or tab after '//' in comment.","line":41,"column":1,"nodeType":"Line","source":"//custom modules","fix":{"range":[1310,1310],"text":" "}},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":42,"column":1,"nodeType":"VariableDeclaration","source":"var indexRouter = require('./routes/indexRouter'),"},{"ruleId":"one-var","severity":2,"message":"Split 'var' declarations into multiple statements.","line":42,"column":1,"nodeType":"VariableDeclaration","source":"var indexRouter = require('./routes/indexRouter'),"},{"ruleId":"no-multi-spaces","severity":2,"message":"Multiple spaces found before '='.","line":52,"column":22,"nodeType":"Punctuator","source":"    dashboardRouter  = require('./routes/dashboardRouter');","fix":{"range":[1862,1864],"text":" "}},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":55,"column":1,"nodeType":"VariableDeclaration","source":"var app = express();","fix":{"range":[1962,1965],"text":"let"}},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":56,"column":1,"nodeType":"VariableDeclaration","source":"var env = app.get('env');","fix":{"range":[1983,1986],"text":"let"}},{"ruleId":"spaced-comment","severity":2,"message":"Expected space or tab after '//' in comment.","line":60,"column":1,"nodeType":"Line","source":"//enable expression","fix":{"range":[2092,2092],"text":" "}},{"ruleId":"no-trailing-spaces","severity":2,"message":"Trailing spaces not allowed.","line":61,"column":21,"nodeType":"Program","source":"app.use(compress()); ","fix":{"range":[2130,2131],"text":""}},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":63,"column":1,"nodeType":"VariableDeclaration","source":"var cpath = env == 'production' ? '../public' : 'public' ;","fix":{"range":[2133,2136],"text":"let"}},{"ruleId":"semi-spacing","severity":2,"message":"Unexpected whitespace before semicolon.","line":63,"column":58,"nodeType":"VariableDeclaration","source":"var cpath = env == 'production' ? '../public' : 'public' ;","fix":{"range":[2189,2190],"text":""}},{"ruleId":"spaced-comment","severity":2,"message":"Expected space or tab after '//' in comment.","line":73,"column":1,"nodeType":"Line","source":"//initialize passort sessions","fix":{"range":[2512,2512],"text":" "}},{"ruleId":"object-curly-spacing","severity":2,"message":"There should be no space after '{'.","line":76,"column":12,"nodeType":"ObjectExpression","source":"   cookie: { maxAge: 3600000 },","fix":{"range":[2604,2605],"text":""}},{"ruleId":"object-curly-spacing","severity":2,"message":"There should be no space before '}'.","line":76,"column":30,"nodeType":"ObjectExpression","source":"   cookie: { maxAge: 3600000 },","fix":{"range":[2620,2621],"text":""}},{"ruleId":"comma-dangle","severity":2,"message":"Missing trailing comma.","line":79,"column":28,"nodeType":"Property","source":"   saveUninitialized: false","fix":{"range":[2685,2685],"text":","}},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":96,"column":18,"nodeType":"Punctuator","source":"app.use('/upload',uploadImageRouter);","fix":{"range":[3223,3223],"text":" "}},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":100,"column":4,"nodeType":"VariableDeclaration","source":"   var err = new Error('Not found');","fix":{"range":[3324,3327],"text":"let"}},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":111,"column":15,"nodeType":"Literal","source":"\t\tconsole.log(\"in error handler\", err);","fix":{"range":[3564,3582],"text":"'in error handler'"}},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":114,"column":19,"nodeType":"Literal","source":"         message: \"err.message\",","fix":{"range":[3673,3686],"text":"'err.message'"}},{"ruleId":"comma-dangle","severity":2,"message":"Missing trailing comma.","line":115,"column":20,"nodeType":"Property","source":"         error: err","fix":{"range":[3707,3707],"text":","}},{"ruleId":"spaced-comment","severity":2,"message":"Expected space or tab after '//' in comment.","line":120,"column":1,"nodeType":"Line","source":"//Should log errors in a file","fix":{"range":[3730,3730],"text":" "}},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":123,"column":15,"nodeType":"Literal","source":"\t\tconsole.log(\"in error handler\", err);","fix":{"range":[3853,3871],"text":"'in error handler'"}},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":126,"column":19,"nodeType":"Literal","source":"         message: \"err.message\",","fix":{"range":[3962,3975],"text":"'err.message'"}},{"ruleId":"comma-dangle","severity":2,"message":"Missing trailing comma.","line":127,"column":20,"nodeType":"Property","source":"         error: err","fix":{"range":[3996,3996],"text":","}},{"ruleId":"no-multiple-empty-lines","severity":2,"message":"More than 2 blank lines not allowed.","line":131,"column":1,"nodeType":"Program","source":"","endLine":134,"endColumn":1,"fix":{"range":[4016,4017],"text":""}}],"errorCount":32,"warningCount":0,"source":"/*\n    * Copyright 2016 NIIT Ltd, Wipro Ltd.\n    *\n    * Licensed under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    *    http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software\n    * distributed under the License is distributed on an \"AS IS\" BASIS,\n    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    * See the License for the specific language governing permissions and\n    * limitations under the License.\n    *\n    * Contributors:\n    *\n    * 1. Ashok Kumar\n    * 2. Partha Mukherjee\n    * 3. Nabila Rafi\n    * 4. Venkatakrishnan U\n    * 5. Arun Karthic R\n    * 6. Hari Prasad Timmapathini\n\t * 7. Yogesh Goyal\n */\n//Third party modules\nvar favicon = require('serve-favicon');\n\n\nvar express = require('express'),\n    mongoose = require('mongoose'),\n    path = require('path'),\n    bodyParser = require('body-parser'),\n    expressSession = require('express-session'),\n    flash = require('connect-flash'),\n    cookieParser = require('cookie-parser'),\n\t passport = require('passport'),\n\t compress = require('compression');\n\t LocalStrategy = require('passport-local').Strategy;\n\n//custom modules\nvar indexRouter = require('./routes/indexRouter'),\n    userRouter = require('./routes/userRouter'),\n    widgetRouter = require('./routes/widgetRouter'),\n    widgetMdxRouter = require('./routes/widgetMdxRouter'),\n    dashboardRouter = require('./routes/dashboardRouter'),\n    chartdataRouter = require('./routes/chartDataRouter'),\n    dbConfig = require('./config/db'),\n    Credential = dbConfig.credentialModel,\n    gridRouter = require('./routes/gridRouter'),\n    commentsRouter = require('./routes/commentsRouter'),\n    dashboardRouter  = require('./routes/dashboardRouter');\n\tuploadImageRouter=require('./routes/uploadImageRouter');\n\nvar app = express();\nvar env = app.get('env');\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'ejs');\n\n//enable expression\napp.use(compress()); \n\nvar cpath = env == 'production' ? '../public' : 'public' ;\napp.use(express.static(path.join(__dirname, cpath)));\napp.use(favicon(path.join(__dirname, cpath, 'favicon.ico')));\n// instruct the app to use the `bodyParser()` middleware for all routes\napp.use(cookieParser('tobo'));\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({extended: false}));\napp.use(flash());\n\n//initialize passort sessions\napp.use(expressSession({\n   secret: 'keyboard cat',\n   cookie: { maxAge: 3600000 },\n   proxy: true,\n   resave: false,\n   saveUninitialized: false\n}));\napp.use(passport.initialize());\napp.use(passport.session());\npassport.use(new LocalStrategy(Credential.authenticate()));\npassport.serializeUser(Credential.serializeUser());\npassport.deserializeUser(Credential.deserializeUser());\n\n\napp.use('/', indexRouter);\napp.use('/user', userRouter);\napp.use('/dashboard', dashboardRouter);\napp.use('/widgets', widgetRouter);\napp.use('/widgetsMdx', widgetMdxRouter);\napp.use('/comment', commentsRouter);\napp.use('/chartdata', chartdataRouter);\napp.use('/execute', gridRouter);\napp.use('/upload',uploadImageRouter);\n\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n   var err = new Error('Not found');\n   err.status = 404;\n   next();\n});\n\n// error handlers\n\n// development error handler\n// will print stacktrace\nif(app.get('env') === 'development') {\n   app.use(function(err, req, res, next) {\n\t\tconsole.log(\"in error handler\", err);\n      res.status(err.status || 500);\n      res.render('error', {\n         message: \"err.message\",\n         error: err\n      });\n   });\n}\n\n//Should log errors in a file\nif(app.get('env') === 'production') {\n   app.use(function(err, req, res, next) {\n\t\tconsole.log(\"in error handler\", err);\n      res.status(err.status || 500);\n      res.render('error', {\n         message: \"err.message\",\n         error: err\n      });\n   });\n}\n\n\n\nmodule.exports = app;\n"}]
